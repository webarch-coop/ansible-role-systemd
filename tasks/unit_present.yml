# Copyright 2022-2025 Chris Croome
#
# This file is part of the Webarchitects systemd Ansible role.
#
# The Webarchitects systemd Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects systemd Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Systemd unit configuration
  block:

    - name: Debug the systemd unit variables
      ansible.builtin.debug:
        var: systemd_unit
        verbosity: 2
      tags:
        - debug

    - name: The systemd_unit variable needs to be defined
      ansible.builtin.assert:
        that:
          - systemd_unit is defined
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"

    - name: "Include the package install tasks when defined for {{ systemd_unit.name }}"
      ansible.builtin.include_tasks: pkg_present.yml
      loop: "{{ systemd_unit.pkgs }}"
      loop_control:
        loop_var: systemd_pkg
        label: "{{ systemd_pkg }}"
      when:
        - systemd_unit.pkgs is defined
        - systemd_unit.pkgs | length > 0

    # Checks needed when this file is the role entry point
    - name: "Include check tasks for {{ systemd_unit.name }}"
      ansible.builtin.include_tasks: checks.yml
      when: >-
        ( systemd_unit_files_existing is not defined ) or
        ( systemd_unit_files_enabled is not defined )

    - name: "Include the systemd unit file absent tasks for {{ systemd_unit.name }}"
      ansible.builtin.include_tasks: file_absent.yml
      loop: "{{ systemd_unit.files }}"
      loop_control:
        loop_var: systemd_file
        label: "{{ systemd_file.path | ansible.builtin.basename }}"
      when:
        - systemd_file.state is defined
        - systemd_file.state == "absent"

    - name: "Include the systemd unit file masked tasks for {{ systemd_unit.name }}"
      ansible.builtin.include_tasks: file_masked.yml
      loop: "{{ systemd_unit.files }}"
      loop_control:
        loop_var: systemd_file
        label: "{{ systemd_file.path | ansible.builtin.basename }}"
      when:
        - systemd_file.state is defined
        - systemd_file.state == "masked"

    - name: "Include the systemd unit file edited, present or templated tasks for {{ systemd_unit.name }}"
      ansible.builtin.include_tasks: file_present.yml
      loop: "{{ systemd_unit.files }}"
      loop_control:
        loop_var: systemd_file
        label: "{{ systemd_file.path | ansible.builtin.basename }}"
      when: >-
        ( systemd_file.state is not defined ) or
        ( systemd_file.state is regex('^edited|present|templated$') )

    - name: Include the systemd unit state tasks
      ansible.builtin.include_tasks: unit_state.yml

  tags:
    - systemd
...
