# Copyright 2022-2025 Chris Croome
#
# This file is part of the Webarchitects systemd Ansible role.
#
# The Webarchitects systemd Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects systemd Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Systemd unit file present
  block:

    - name: Debug the proposed systemd unit file variables
      ansible.builtin.debug:
        var: systemd_file
        verbosity: 2

    - name: Check the depth of the systemd file conf dictionary
      block:

        - name: Ensure that systemd_file.conf is a dictionary
          ansible.builtin.assert:
            that:
              - systemd_file.conf | ansible.builtin.type_debug == "dict"
            quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"

        - name: Include tasks to check the depth of the dictionary
          ansible.builtin.include_tasks: check_depth.yml
          vars:
            systemd_dictionary: "{{ systemd_file.conf }}"

        - name: Set a fact for the depth of the dictionary
          ansible.builtin.set_fact:
            systemd_conf_depth: "{{ systemd_dictionary_depth }}"

        - name: Ensure that systemd_file.conf dictionary depth is 0, 1, 2 or 3
          ansible.builtin.assert:
            that:
              - systemd_conf_depth is regex('^0|1|2|3$')
            quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"

      when: systemd_file.conf is defined

    - name: Stat the systemd unit file
      ansible.builtin.stat:
        path: "{{ systemd_file.path }}"
      register: systemd_file_state

    - name: Ensure that contradictory variables are not defined
      ansible.builtin.assert:
        that:
          - systemd_file.state != "edited"
        fail_msg: "The {{ systemd_file.path }} file needs to exist before it can be edited, set state to present or templated for the file to be created."
      when:
        - systemd_file.state is defined
        - not systemd_file_state.stat.exists | bool

    - name: Systemd unit file existing and not depth three edit tasks
      block:

        - name: Slurp the systemd unit file
          ansible.builtin.slurp:
            path: "{{ systemd_file.path }}"
          register: systemd_file_b64encoded

        - name: Set a fact for the existing systemd unit file variables
          ansible.builtin.set_fact:
            systemd_file_vars: "{{ systemd_file_b64encoded['content'] | ansible.builtin.b64decode | community.general.jc('ini') }}"

        - name: Debug the existing systemd unit file variables
          ansible.builtin.debug:
            var: systemd_file_vars
            verbosity: 2

        - name: Debug the type of the file vars dictionary
          ansible.builtin.debug:
            msg: "{{ systemd_file_vars | ansible.builtin.dict2items | ansible.builtin.type_debug }}"
            verbosity: 2

        - name: Include tasks to check the depth of the dictionary
          ansible.builtin.include_tasks: check_depth.yml
          vars:
            systemd_dictionary: "{{ systemd_file_vars }}"

        - name: Set a fact for the depth of the dictionary
          ansible.builtin.set_fact:
            systemd_file_depth: "{{ systemd_dictionary_depth }}"

        - name: Ensure that existing dictionary depth is 1 or 2
          ansible.builtin.assert:
            that:
              - systemd_file_depth is regex('^1|2$')
            quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"

        - name: Template the file as the variable depth is to be changed
          ansible.builtin.include_tasks: file_templated.yml
          when: systemd_conf_depth != systemd_file_depth

        - name: Include the systemd unit file edited tasks
          ansible.builtin.include_tasks: file_edited.yml
          when: systemd_conf_depth == systemd_file_depth

      when:
        - systemd_conf_depth is regex('^1|2$')
        - systemd_file_state.stat.exists | bool
        - ( systemd_file.state is not defined ) or ( systemd_file.state is regex('^edited|present$') )

    - name: Systemd unit file not existing or templated or depth three tasks
      ansible.builtin.include_tasks: file_templated.yml
      when: >-
        ( not systemd_file_state.stat.exists | bool ) or
        ( systemd_file.state is defined and systemd_file.state == "templated" ) or
        ( systemd_conf_depth == 3 )

    - name: Stat the systemd unit file
      ansible.builtin.stat:
        path: "{{ systemd_file.path }}"
      register: systemd_file_state

  tags:
    - systemd
...
