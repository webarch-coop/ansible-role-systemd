---
- name: Systemd timesyncd tasks
  block:

    - name: Check the timedatectl status
      block:

        - name: Get the timedatectl status
          ansible.builtin.command: timedatectl status
          check_mode: false
          changed_when: false
          register: systemd_timedatectl_status_command

      rescue:

        - name: The server appears to need a reboot
          ansible.builtin.debug:
            msg: "The server needs to be rebooted since checking the timedatectl status failed in a way that indicates that systemd isn't running properly."
          when: ( "Failed to connect to bus" in systemd_timedatectl_status_command.stderr )

        - name: Pause for 30 seconds to allow time to manually cancel the reboot that is about to happen
          ansible.builtin.pause:
            seconds: 30
          when:
            - systemd_timesyncd_reboot | bool
            - ( "Failed to connect to bus" in systemd_timedatectl_status_command.stderr )

        - name: Automatically rebooting the server
          ansible.builtin.reboot:
            reboot_command: reboot -h now
          when:
            - systemd_timesyncd_reboot | bool
            - ( "Failed to connect to bus" in systemd_timedatectl_status_command.stderr )

        - name: Pause for 10 seconds to allow the services on the server to all start
          ansible.builtin.pause:
            seconds: 10
          when:
            - systemd_timesyncd_reboot | bool
            - ( "Failed to connect to bus" in systemd_timedatectl_status_command.stderr )

    - name: Set a variable for the timedatectl status dictionary
      ansible.builtin.set_fact:
        systemd_timedatectl_status: "{{ systemd_timedatectl_status_command.stdout | community.general.jc('timedatectl') }}"

    - name: Debug the timedatectl status
      ansible.builtin.debug:
        var: systemd_timedatectl_status
        verbosity: 2

    - name: Set the time if not synchronized
      block:

        - name: Set time using systemd and NTP
          ansible.builtin.command: timedatectl set-ntp true
          changed_when: true

        - name: Pause for 30 seconds to allow the clock to synchronized
          ansible.builtin.pause:
            seconds: 30

        - name: Get the timedatectl status
          ansible.builtin.command: timedatectl status
          check_mode: false
          changed_when: false
          register: systemd_timedatectl_status_command

        - name: Set a variable for the timedatectl status dictionary
          ansible.builtin.set_fact:
            systemd_timedatectl_status: "{{ systemd_timedatectl_status_command.stdout | community.general.jc('timedatectl') }}"

        - name: Debug the timedatectl status
          ansible.builtin.debug:
            var: systemd_timedatectl_status
            verbosity: 2

        - name: Reboot the server to sync the clock
          block:

            - name: Pause for 30 seconds to allow time to manually cancel the reboot that is about to happen
              ansible.builtin.pause:
                seconds: 30

            - name: Reboot the server if the time is not synchronized
              ansible.builtin.reboot:
                reboot_command: reboot -h now
              when: not systemd_timedatectl_status.system_clock_synchronized | bool

            - name: Pause for 10 seconds to allow the services on the server to all start
              ansible.builtin.pause:
                seconds: 10

            - name: Get the timedatectl status
              ansible.builtin.command: timedatectl status
              check_mode: false
              changed_when: false
              register: systemd_timedatectl_status_command

            - name: Set a variable for the timedatectl status dictionary
              ansible.builtin.set_fact:
                systemd_timedatectl_status: "{{ systemd_timedatectl_status_command.stdout | community.general.jc('timedatectl') }}"

            - name: Debug the timedatectl status
              ansible.builtin.debug:
                var: systemd_timedatectl_status
                verbosity: 2

          when: systemd_timesyncd_reboot | bool

      when: >
        ( systemd_timedatectl_status.ntp_service is not defined ) or
        ( systemd_timedatectl_status.ntp_service != "active" ) or
        ( not systemd_timedatectl_status.system_clock_synchronized | bool )

    - name: Clock sync status
      ansible.builtin.debug:
        msg: "The system clock is {% if not systemd_timedatectl_status.system_clock_synchronized %}NOT {% endif %}synchronized"

    - name: Fail if the system clock is not synchronized
      ansible.builtin.assert:
        that:
          - systemd_timedatectl_status.system_clock_synchronized | bool
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"

  tags:
    - systemd
...
