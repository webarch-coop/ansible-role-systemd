---
- name: Systemd unit file present
  block:

    - name: Debug the proposed systemd unit file variables
      ansible.builtin.debug:
        var: systemd_file
        verbosity: 2

    - name: Stat the systemd unit file
      ansible.builtin.stat:
        path: "{{ systemd_file.path }}"
      register: systemd_file_state

    - name: Ensure that contradictory variables are not defined
      ansible.builtin.assert:
        that:
          - systemd_file.state != "edited"
        fail_msg: "The {{ systemd_file.path }} file needs to exist before it can be edited, set state to present or templated for the file to be created."
      when:
        - systemd_file.state is defined
        - not systemd_file_state.stat.exists | bool

    - name: Systemd unit file existing tasks
      block:

        - name: Slurp the systemd unit file
          ansible.builtin.slurp:
            path: "{{ systemd_file.path }}"
          register: systemd_file_b64encoded

        - name: Set a fact for the existing systemd unit file variables
          ansible.builtin.set_fact:
            systemd_file_vars: "{{ systemd_file_b64encoded['content'] | b64decode | community.general.jc('ini') }}"

        - name: Debug the existing systemd unit file variables
          ansible.builtin.debug:
            var: systemd_file_vars
            verbosity: 2

        - name: Set a fact for the existing systemd unit file sections
          ansible.builtin.set_fact:
            systemd_file_sections: "{{ systemd_file_vars.keys() }}"

        - name: Debug the existing systemd unit file sections
          ansible.builtin.debug:
            var: systemd_file_sections
            verbosity: 2

        - name: Backup copy of the existing systemd unit file present
          ansible.builtin.copy:
            src: "{{ systemd_file.path }}"
            dest: "{{ systemd_file_backup }}"
            mode: "0644"
            owner: root
            group: root
            remote_src: true
          when: systemd_file.conf != systemd_file_vars

        - name: Systemd unit file edited
          block:

            - name: Comment block present
              block:

                - name: Ansible managed comment absent from the top of the file
                  ansible.builtin.lineinfile:
                    path: "{{ systemd_file.path }}"
                    line: "# {{ systemd_ansible_managed }}"
                    state: absent
                    mode: "0644"
                    owner: root
                    group: root

                - name: Comment present at the top of the systemd unit file
                  ansible.builtin.blockinfile:
                    path: "{{ systemd_file.path }}"
                    block: "{{ systemd_file.comment | ansible.builtin.comment }}"
                    insertbefore: BOF
                    mode: "0644"
                    owner: root
                    group: root

              when:
                - systemd_file.comment is defined
                - systemd_file.comment | length > 0

            - name: Ansible managed comment present at the top of the file
              ansible.builtin.lineinfile:
                path: "{{ systemd_file.path }}"
                line: "# {{ systemd_ansible_managed }}"
                state: present
                insertbefore: BOF
                mode: "0644"
                owner: root
                group: root

            - name: Include the systemd unit file edited tasks
              ansible.builtin.include_tasks: file_edited.yml
              loop: "{{ systemd_file.conf | dict2items }}"
              loop_control:
                loop_var: systemd_section

          when: >-
            ( systemd_file.state is not defined ) or
            ( systemd_file.state is regex('^edited|present$') )

      when: systemd_file_state.stat.exists | bool

    - name: Systemd unit file not existing or templated tasks
      block:

        - name: Systemd unit file directory present
          ansible.builtin.file:
            path: "{{ systemd_file.path | ansible.builtin.dirname }}"
            state: directory
            mode: 0755
            owner: root
            group: root

        - name: Systemd unit file templated
          ansible.builtin.template:
            src: unit.j2
            dest: "{{ systemd_file.path }}"
            mode: 0644
            owner: root
            group: root
          register: systemd_file_present
          notify:
            - Reload systemd

        - name: Set systemd_file_changed if the systemd unit file was changed
          ansible.builtin.set_fact:
            systemd_file_changed: true
          when:
            - systemd_file_present is defined
            - systemd_file_present.changed | bool

      when: >-
        ( not systemd_file_state.stat.exists | bool ) or
        ( systemd_file.state is defined and systemd_file.state == "templated" )

    - name: Stat the systemd unit file
      ansible.builtin.stat:
        path: "{{ systemd_file.path }}"
      register: systemd_file_state

    - name: Include flush handlers task
      ansible.builtin.include_tasks: flush_handlers.yml
      when: systemd_file_present.changed | bool

  tags:
    - systemd
...
